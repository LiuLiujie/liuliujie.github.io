const t=JSON.parse(`{"key":"v-e37bb4d4","path":"/blogs/springboot/IoC-DI-AOP.html","title":"控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP)","lang":"en-US","frontmatter":{"category":["Computer Science","Backend Development"],"tag":["Springboot"],"description":"控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP) IOC和DI IOC是指在程序开发过程中，对象实例的创建不再由调用者管理，而是由Spring容器创建，Spring容器会负责控制程序之间的关系，而不是由代码直接控制，因此，控制权由程序代码转移到了Spring容器，控制权发生了反转，即控制反转。 而DI依赖注入其实和控制翻转是同一种开发模式的一体两面，由Spring容器对各个Bean的依赖进行注入。 Spring IOC提供了两种IOC容器，分别是BeanFactory和ApplicationContext。","head":[["meta",{"property":"og:url","content":"https://blog.yujieliu.com/blogs/springboot/IoC-DI-AOP.html"}],["meta",{"property":"og:site_name","content":"Yujie's blog"}],["meta",{"property":"og:title","content":"控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP)"}],["meta",{"property":"og:description","content":"控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP) IOC和DI IOC是指在程序开发过程中，对象实例的创建不再由调用者管理，而是由Spring容器创建，Spring容器会负责控制程序之间的关系，而不是由代码直接控制，因此，控制权由程序代码转移到了Spring容器，控制权发生了反转，即控制反转。 而DI依赖注入其实和控制翻转是同一种开发模式的一体两面，由Spring容器对各个Bean的依赖进行注入。 Spring IOC提供了两种IOC容器，分别是BeanFactory和ApplicationContext。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-27T20:57:56.000Z"}],["meta",{"property":"article:author","content":"Yujie Liu"}],["meta",{"property":"article:tag","content":"Springboot"}],["meta",{"property":"article:modified_time","content":"2023-11-27T20:57:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-27T20:57:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yujie Liu\\",\\"url\\":\\"https://blog.yujieliu.com/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"IOC和DI","slug":"ioc和di","link":"#ioc和di","children":[]},{"level":2,"title":"AOP","slug":"aop","link":"#aop","children":[]}],"git":{"createdTime":1701118676000,"updatedTime":1701118676000,"contributors":[{"name":"Yujie","email":"yujie.liu.public@gmail.com","commits":1}]},"readingTime":{"minutes":1.59,"words":476},"filePathRelative":"blogs/springboot/IoC-DI-AOP.md","localizedDate":"November 27, 2023","excerpt":"<h1> 控制翻转 (IoC)、依赖注入 (DI) 和面向切面编程 (AOP)</h1>\\n<h2> IOC和DI</h2>\\n<p><strong>IOC是指在程序开发过程中，对象实例的创建不再由调用者管理，而是由Spring容器创建，Spring容器会负责控制程序之间的关系，而不是由代码直接控制，因此，控制权由程序代码转移到了Spring容器，控制权发生了反转，即控制反转。</strong></p>\\n<p><strong>而DI依赖注入其实和控制翻转是同一种开发模式的一体两面，由Spring容器对各个Bean的依赖进行注入。</strong></p>\\n<p><strong>Spring IOC提供了两种IOC容器，分别是BeanFactory和ApplicationContext。</strong></p>","autoDesc":true}`);export{t as data};
