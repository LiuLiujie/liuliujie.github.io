const t=JSON.parse(`{"key":"v-ff933c12","path":"/blogs/java/java-abstract-class.html","title":"Java 抽象类","lang":"en-US","frontmatter":{"category":"Computer Science, Programming Language","tag":["Java"],"description":"Java 抽象类 抽象类: abstract修饰的类为抽象类，抽象类不能创建实例 抽象成员函数: abstract修饰的类为抽象成员函数，该成员函数为抽象成员函数，没有函数体。 抽象类与抽象成员函数有何联系: 有抽象函数的类必须被生命为抽象类，但是抽象函数中也可以有非抽象函数、也可以有构造函数。 抽象类可以有构造函数，可以通过构造函数初始化抽象类里的变量，主要是给子类通过 super() 调用。","head":[["meta",{"property":"og:url","content":"https://blog.yujieliu.com/blogs/java/java-abstract-class.html"}],["meta",{"property":"og:site_name","content":"Yujie's blog"}],["meta",{"property":"og:title","content":"Java 抽象类"}],["meta",{"property":"og:description","content":"Java 抽象类 抽象类: abstract修饰的类为抽象类，抽象类不能创建实例 抽象成员函数: abstract修饰的类为抽象成员函数，该成员函数为抽象成员函数，没有函数体。 抽象类与抽象成员函数有何联系: 有抽象函数的类必须被生命为抽象类，但是抽象函数中也可以有非抽象函数、也可以有构造函数。 抽象类可以有构造函数，可以通过构造函数初始化抽象类里的变量，主要是给子类通过 super() 调用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-25T09:26:15.000Z"}],["meta",{"property":"article:author","content":"Yujie Liu"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:modified_time","content":"2023-11-25T09:26:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 抽象类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T09:26:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yujie Liu\\",\\"url\\":\\"https://blog.yujieliu.com/intro.html\\"}]}"]]},"headers":[],"git":{"createdTime":1700904375000,"updatedTime":1700904375000,"contributors":[{"name":"Yujie","email":"yujie.liu.public@gmail.com","commits":1}]},"readingTime":{"minutes":0.55,"words":164},"filePathRelative":"blogs/java/java-abstract-class.md","localizedDate":"November 25, 2023","excerpt":"<h1> Java 抽象类</h1>\\n<ol>\\n<li>\\n<p>抽象类: abstract修饰的类为抽象类，抽象类不能创建实例</p>\\n</li>\\n<li>\\n<p>抽象成员函数: abstract修饰的类为抽象成员函数，该成员函数为抽象成员函数，没有函数体。</p>\\n</li>\\n<li>\\n<p>抽象类与抽象成员函数有何联系: 有抽象函数的类必须被生命为抽象类，但是抽象函数中也可以有非抽象函数、也可以有构造函数。</p>\\n</li>\\n<li>\\n<p>抽象类可以有构造函数，可以通过构造函数初始化抽象类里的变量，主要是给子类通过 <code>super()</code> 调用。</p>\\n</li>\\n</ol>","autoDesc":true}`);export{t as data};
