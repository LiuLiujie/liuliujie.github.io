import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as h,d as i}from"./app-9e8a13db.js";const r={},t=i('<h1 id="hashmap详解" tabindex="-1"><a class="header-anchor" href="#hashmap详解" aria-hidden="true">#</a> HashMap详解</h1><h2 id="_1-7与1-8的数据结构" tabindex="-1"><a class="header-anchor" href="#_1-7与1-8的数据结构" aria-hidden="true">#</a> 1.7与1.8的数据结构</h2><h2 id="put过程" tabindex="-1"><a class="header-anchor" href="#put过程" aria-hidden="true">#</a> Put过程</h2><h3 id="主要流程" tabindex="-1"><a class="header-anchor" href="#主要流程" aria-hidden="true">#</a> 主要流程</h3><ol><li><p>计算哈希值</p></li><li><p>根据取模运算，获取对应的桶的位置</p></li><li><p>插入值到桶中，需要考虑哈希冲突</p><ul><li><p>如果桶为空，直接插入</p></li><li><p>如果桶不为空，则检查桶对应的链表或红黑树是否有相同key，若相同则替换value，否则插入新node。如果是插入链表，插入完成后检查是否需要树化（默认8）。</p></li></ul></li><li><p>检查是否需要扩容（默认16）</p></li></ol>',5),l=[t];function d(s,n){return e(),h("div",null,l)}const p=a(r,[["render",d],["__file","hashmap.html.vue"]]);export{p as default};
