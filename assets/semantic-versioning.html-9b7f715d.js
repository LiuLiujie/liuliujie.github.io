const e=JSON.parse(`{"key":"v-5c1a1003","path":"/blogs/devops/semantic-versioning.html","title":"Semantic Versioning","lang":"en-US","frontmatter":{"category":"Computer Science","tag":["Versioning","DevOps"],"description":"Semantic Versioning The detail of semantic versioning can be found here. In this blog I only highlight some key points. Summary Given a version number MAJOR.MINOR.PATCH, increment the: MAJOR version when you make incompatible API changes MINOR version when you add functionality in a backwards compatible manner PATCH version when you make backwards compatible bug fixes Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format. (e.g. 1.0.0-beta, 2.0.0-rc.1)","head":[["meta",{"property":"og:url","content":"https://blog.yujieliu.com/blogs/devops/semantic-versioning.html"}],["meta",{"property":"og:site_name","content":"Yujie's blog"}],["meta",{"property":"og:title","content":"Semantic Versioning"}],["meta",{"property":"og:description","content":"Semantic Versioning The detail of semantic versioning can be found here. In this blog I only highlight some key points. Summary Given a version number MAJOR.MINOR.PATCH, increment the: MAJOR version when you make incompatible API changes MINOR version when you add functionality in a backwards compatible manner PATCH version when you make backwards compatible bug fixes Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format. (e.g. 1.0.0-beta, 2.0.0-rc.1)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-25T09:26:15.000Z"}],["meta",{"property":"article:author","content":"Yujie Liu"}],["meta",{"property":"article:tag","content":"Versioning"}],["meta",{"property":"article:tag","content":"DevOps"}],["meta",{"property":"article:modified_time","content":"2023-11-25T09:26:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Semantic Versioning\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-25T09:26:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yujie Liu\\",\\"url\\":\\"https://blog.yujieliu.com/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1700904375000,"updatedTime":1700904375000,"contributors":[{"name":"Yujie","email":"yujie.liu.public@gmail.com","commits":1}]},"readingTime":{"minutes":0.29,"words":86},"filePathRelative":"blogs/devops/semantic-versioning.md","localizedDate":"November 25, 2023","excerpt":"<h1> Semantic Versioning</h1>\\n<p>The detail of semantic versioning can be found <a href=\\"https://semver.org\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">here</a>.\\nIn this blog I only highlight some key points.</p>\\n<h2> Summary</h2>\\n<p>Given a version number MAJOR.MINOR.PATCH, increment the:</p>\\n<ul>\\n<li>MAJOR version when you make <strong>incompatible</strong> API changes</li>\\n<li>MINOR version when you add <strong>functionality</strong> in a <strong>backwards compatible</strong> manner</li>\\n<li>PATCH version when you make backwards compatible <strong>bug fixes</strong></li>\\n<li>Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.\\n(e.g. 1.0.0-beta, 2.0.0-rc.1)</li>\\n</ul>","autoDesc":true}`);export{e as data};
