import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,d}from"./app-9e8a13db.js";const h={},t=d('<h1 id="_2023-11-13-美团笔试-数据二十条" tabindex="-1"><a class="header-anchor" href="#_2023-11-13-美团笔试-数据二十条" aria-hidden="true">#</a> 2023-11-13 美团笔试，数据二十条</h1><h2 id="美团笔试" tabindex="-1"><a class="header-anchor" href="#美团笔试" aria-hidden="true">#</a> 美团笔试</h2><p>美团笔试前两题都很简单，第三题难度一下子顶上去了没做出来记录一下。</p><h3 id="美丽串" tabindex="-1"><a class="header-anchor" href="#美丽串" aria-hidden="true">#</a> 美丽串</h3><p>带有<code>mei</code>的字符串被称为美丽串，问一个字符串一个字符串去掉一个或多个不相互连续的字符成为美丽串的方案数目。</p><p>比如<code>woshimeeilichuan</code>这种字符串，去掉一个e就是美丽串，但因为有很多杂七杂八的其他字符在就变得很复杂了。</p><h3 id="我的想法" tabindex="-1"><a class="header-anchor" href="#我的想法" aria-hidden="true">#</a> 我的想法</h3><p>我的想法是<strong>回溯法</strong>暴力来，首先先把一个不是美丽串的字符串变成美丽串，再考虑去掉其他杂七杂八的字符的方案。看到网上有dfs过的，看来确实是类似思路。</p>',8),c=[t];function _(i,o){return a(),r("div",null,c)}const l=e(h,[["render",_],["__file","2023-11-13 美团笔试与数据二十条.html.vue"]]);export{l as default};
