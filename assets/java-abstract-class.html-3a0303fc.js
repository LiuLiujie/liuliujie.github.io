import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as e,d as c}from"./app-9e8a13db.js";const s={},r=c('<h1 id="java-抽象类" tabindex="-1"><a class="header-anchor" href="#java-抽象类" aria-hidden="true">#</a> Java 抽象类</h1><ol><li><p>抽象类: abstract修饰的类为抽象类，抽象类不能创建实例</p></li><li><p>抽象成员函数: abstract修饰的类为抽象成员函数，该成员函数为抽象成员函数，没有函数体。</p></li><li><p>抽象类与抽象成员函数有何联系: 有抽象函数的类必须被生命为抽象类，但是抽象函数中也可以有非抽象函数、也可以有构造函数。</p></li><li><p>抽象类可以有构造函数，可以通过构造函数初始化抽象类里的变量，主要是给子类通过 <code>super()</code> 调用。</p></li></ol>',2),o=[r];function l(i,n){return t(),e("div",null,o)}const p=a(s,[["render",l],["__file","java-abstract-class.html.vue"]]);export{p as default};
