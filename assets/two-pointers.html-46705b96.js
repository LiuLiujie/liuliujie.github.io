import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as l,c as i,a as n,b as s,e as p,w as u,d as t}from"./app-9e8a13db.js";const r={},d=n("h1",{id:"two-pointers-双指针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#two-pointers-双指针","aria-hidden":"true"},"#"),s(" Two Pointers 双指针")],-1),k=n("h2",{id:"左右指针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#左右指针","aria-hidden":"true"},"#"),s(" 左右指针")],-1),v={id:"t2300-咒语和药水的成功对数",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#t2300-咒语和药水的成功对数","aria-hidden":"true"},"#",-1),b={href:"https://leetcode.cn/problems/successful-pairs-of-spells-and-potions/",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>给你两个正整数数组 <code>spells</code> 和 <code>potions</code> ，长度分别为 <code>n</code> 和 <code>m</code> ，其中 <code>spells[i]</code> 表示第 <code>i</code> 个咒语的能量强度，<code>potions[j]</code> 表示第 <code>j</code> 瓶药水的能量强度。</p><p>同时给你一个整数 <code>success</code> 。一个咒语和药水的能量强度 <strong>相乘</strong> 如果 <strong>大于等于</strong> <code>success</code> ，那么它们视为一对 <strong>成功</strong> 的组合。</p><p>请你返回一个长度为 <code>n</code> 的整数数组 <code>pairs</code>，其中 <code>pairs[i]</code> 是能跟第 <code>i</code> 个咒语成功组合的 <strong>药水</strong> 数目。</p><p><strong>示例 1：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：spells = [5,1,3], potions = [1,2,3,4,5], success = 7
输出：[4,0,3]
解释：
- 第 0 个咒语：5 * [1,2,3,4,5] = [5,10,15,20,25] 。总共 4 个成功组合。
- 第 1 个咒语：1 * [1,2,3,4,5] = [1,2,3,4,5] 。总共 0 个成功组合。
- 第 2 个咒语：3 * [1,2,3,4,5] = [3,6,9,12,15] 。总共 3 个成功组合。
所以返回 [4,0,3] 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：spells = [3,1,2], potions = [8,5,8], success = 16
输出：[2,0,2]
解释：
- 第 0 个咒语：3 * [8,5,8] = [24,15,24] 。总共 2 个成功组合。
- 第 1 个咒语：1 * [8,5,8] = [8,5,8] 。总共 0 个成功组合。
- 第 2 个咒语：2 * [8,5,8] = [16,10,16] 。总共 2 个成功组合。
所以返回 [2,0,2] 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p><ul><li><code>n == spells.length</code></li><li><code>m == potions.length</code></li><li><code>1 &lt;= n, m &lt;= 105</code></li><li><code>1 &lt;= spells[i], potions[i] &lt;= 105</code></li><li><code>1 &lt;= success &lt;= 1010</code></li></ul><h4 id="我的答案" tabindex="-1"><a class="header-anchor" href="#我的答案" aria-hidden="true">#</a> 我的答案</h4><p>看题目规模乘出来是超过int的大小的，因此得用long。</p><p>对数组<code>spells</code>下标按照其位置上的能量强度进行<strong>升序</strong>排序，假设其排序后的数组为 <code>idx</code>，对数组 <code>potions</code>按照能量强度进行<strong>降序</strong>排序。</p><p>对<code>spells</code>进行从左到右用i遍历，对<code>potions</code>从做到右用j遍历，对于每个i如果与j相乘后小于了<code>success</code>，则对于j之前的所有元素都会大于，j就是答案；这时把i往前走越来越大，对于j而言也是单调不减向右。</p>`,13),g=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">successfulPairs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> spells<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> potions<span class="token punctuation">,</span> <span class="token keyword">long</span> success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> spells<span class="token punctuation">.</span>length<span class="token punctuation">,</span> m <span class="token operator">=</span> potions<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> idx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            idx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> spells<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            idx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>potions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">,</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> temp <span class="token operator">=</span> potions<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            potions<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> potions<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
            potions<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> p <span class="token operator">=</span> idx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> v <span class="token operator">=</span> idx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> potions<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> v <span class="token operator">&gt;=</span> success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token operator">++</span>j<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            res<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

作者：力扣官方题解
链接：https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>leetcode<span class="token punctuation">.</span>cn<span class="token operator">/</span>problems<span class="token operator">/</span>successful<span class="token operator">-</span>pairs<span class="token operator">-</span>of<span class="token operator">-</span>spells<span class="token operator">-</span>and<span class="token operator">-</span>potions<span class="token operator">/</span>solutions<span class="token operator">/</span><span class="token number">2477429</span><span class="token operator">/</span>zhou<span class="token operator">-</span>yu<span class="token operator">-</span>he<span class="token operator">-</span>yao<span class="token operator">-</span>shui<span class="token operator">-</span>de<span class="token operator">-</span>cheng<span class="token operator">-</span>gong<span class="token operator">-</span>dui<span class="token operator">-</span>sh<span class="token operator">-</span>a22z<span class="token operator">/</span>
来源：力扣（<span class="token class-name">LeetCode</span>）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快慢指针" tabindex="-1"><a class="header-anchor" href="#快慢指针" aria-hidden="true">#</a> 快慢指针</h2>`,2);function w(_,y){const o=a("ExternalLinkIcon"),e=a("RouterLink");return l(),i("div",null,[d,k,n("h3",v,[m,s(" T2300. "),n("a",b,[s("咒语和药水的成功对数"),p(o)])]),h,n("p",null,[s("这题用"),p(e,{to:"/blogs/algorithm/dichotomy.html"},{default:u(()=>[s("二分法")]),_:1}),s("来解更为简单")]),g])}const j=c(r,[["render",w],["__file","two-pointers.html.vue"]]);export{j as default};
